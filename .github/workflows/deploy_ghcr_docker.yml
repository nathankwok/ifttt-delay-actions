name: Publish Docker image

on:
  push:
    branches:
      - "main"
      - "master"

env:
  REGISTRY: ghcr.io
  # github.repository = <account>/<repo_name>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Get Repository Name
        # REPO_NAME = ifttt-delay-actions
        run: echo "REPO_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Github Container Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # TODO pull previous latest image



      # TODO retag previous latest image to backup



      # TODO push backup image



      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # set latest tag for default branch
          tags: |
            type=raw,value=latest
            type=raw,value={{branch}}

      - name: Build and push Docker images
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Echo tags
        run: echo "${{ steps.meta.outputs.tags }}"

      - name: Echo images
        run: echo "${{ steps.meta.outputs.images }}"

      - name: Echo labels
        run: echo "${{ steps.meta.outputs.labels }}"

#      # Deploy the image to an existing Northflank service or job.
#      - name: Deploy to Northflank
#        uses: northflank/deploy-to-northflank@v1
#        with:
#          northflank-api-key: ${{ secrets.NORTHFLANK_API_KEY }}
#          project-id: ${{ secrets.NORTHFLANK_PROJECT_ID }}
#          service-id: ${{ secrets.NORTHFLANK_SERVICE_ID }}
#          image-path: ${{ steps.meta.outputs.tags }}
#          credentials-id: ${{ secrets.NORTHFLANK_CREDENTIALS_ID }}

      - name: Clean up untagged images
        id: Clean up images
        uses: 'docker://us-docker.pkg.dev/gcr-cleaner/gcr-cleaner/gcr-cleaner-cli'
        with:
          args: >-
            -repo=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}